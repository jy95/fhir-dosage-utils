"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2485],{43890:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>m,contentTitle:()=>h,default:()=>p,frontMatter:()=>d,metadata:()=>i,toc:()=>g});const i=JSON.parse('{"id":"custom/fromFHIRQuantityUnitToString","title":"\ud83d\udccf fromFHIRQuantityUnitToString","description":"Function to turn a quantity unit (e.g UCUM \\"ml\\") into a string for humans (e.g \\"militier\\")","source":"@site/docs/custom/fromFHIRQuantityUnitToString.mdx","sourceDirName":"custom","slug":"/custom/fromFHIRQuantityUnitToString","permalink":"/fhir-dosage-utils/docs/custom/fromFHIRQuantityUnitToString","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/custom/fromFHIRQuantityUnitToString.mdx","tags":[],"version":"current","frontMatter":{"description":"Function to turn a quantity unit (e.g UCUM \\"ml\\") into a string for humans (e.g \\"militier\\")","title":"\ud83d\udccf fromFHIRQuantityUnitToString"},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udd0c fromExtensionsToString","permalink":"/fhir-dosage-utils/docs/custom/fromExtensionsToString"},"next":{"title":"\ud83c\udf10 i18nConfig","permalink":"/fhir-dosage-utils/docs/custom/i18nConfig"}}');var s=e(74848),o=e(28453),r=e(33231);const a=JSON.parse('{"doseAndRate":[{"doseQuantity":{"value":"25","system":"http://unitsofmeasure.org","code":"ug"}}]}');var l=e(65537),u=e(79329),c=e(50375);const d={description:'Function to turn a quantity unit (e.g UCUM "ml") into a string for humans (e.g "militier")',title:"\ud83d\udccf fromFHIRQuantityUnitToString"},h=void 0,m={},g=[];function f(t){const n={a:"a",admonition:"admonition",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(l.A,{children:[(0,s.jsx)(u.A,{value:"text",label:"Human readable text",default:!0,children:(0,s.jsx)(c.A,{dosage:a,config:{fromFHIRQuantityUnitToString:({quantity:t,language:n})=>`[${n} translation of "${t.code||t.unit}" (${t.system||""})]`}})}),(0,s.jsx)(u.A,{value:"json",label:"Dosage",children:(0,s.jsx)(r.default,{language:"json",children:JSON.stringify(a,null,2)})}),(0,s.jsx)(u.A,{value:"config",label:"Configuration",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'{\n    fromFHIRQuantityUnitToString: ({ quantity, language }) => {\n        let unit = quantity.code || quantity.unit;\n        let system = quantity.system || "";\n\n        return `[${language} translation of "${unit}" (${system})]`;\n    };\n}\n'})})})]}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsx)(n.p,{children:"Possible cases in production :"}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["SNOMED CT - ",(0,s.jsx)(n.a,{href:"http://snomed.info/sct",children:"http://snomed.info/sct"})]}),"\n",(0,s.jsxs)(n.li,{children:["UCUM - ",(0,s.jsx)(n.a,{href:"http://unitsofmeasure.org",children:"http://unitsofmeasure.org"})]}),"\n",(0,s.jsxs)(n.li,{children:["Other Code System than SNOMED CT / UCUM, such as LOINC - ",(0,s.jsx)(n.a,{href:"http://loinc.org/",children:"http://loinc.org/"})]}),"\n",(0,s.jsxs)(n.li,{children:["(Local) Value Set, e.g. ",(0,s.jsx)(n.a,{href:"https://www.ehealth.fgov.be/standards/fhir/core/ValueSet/be-cd-administration-unit",children:"https://www.ehealth.fgov.be/standards/fhir/core/ValueSet/be-cd-administration-unit"})]}),"\n",(0,s.jsx)(n.li,{children:"Hardcoded unit without any system"}),"\n"]}),(0,s.jsxs)(n.p,{children:["To support them all in your ",(0,s.jsx)(n.code,{children:"fromFHIRQuantityUnitToString"})," implementation, here are some hints :"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["3rd party library (such as ",(0,s.jsx)(n.a,{href:"https://github.com/LHNCBC/ucum-lhc",children:"@lhncbc/ucum-lhc"}),", ...) to turn your code to human readable text"]}),"\n",(0,s.jsx)(n.li,{children:"3rd party FHIR Terminology / Conversion server"}),"\n",(0,s.jsx)(n.li,{children:"Translation file(s) of your (local) Value Sets"}),"\n",(0,s.jsxs)(n.li,{children:["Extensions put on ",(0,s.jsx)(n.a,{href:"https://build.fhir.org/datatypes.html#Quantity",children:"Quantity"}),", depending of your implementation guide"]}),"\n",(0,s.jsx)(n.li,{children:"..."}),"\n"]})]})]})}function p(t={}){const{wrapper:n}={...(0,o.R)(),...t.components};return n?(0,s.jsx)(n,{...t,children:(0,s.jsx)(f,{...t})}):f(t)}},50375:(t,n,e)=>{e.d(n,{A:()=>l});var i=e(96540),s=e(15721),o=e(88420),r=e(33231),a=e(74848);function l(t){let{dosage:n,config:e}=t;const[l,u]=(0,i.useState)(""),[c,d]=(0,i.useState)(e?.language||"en"),[h,m]=(0,i.useState)(null);(0,i.useEffect)((()=>{!async function(){const t=await s.U.build({...e});m(t)}()}),[e]),(0,i.useEffect)((()=>{!async function(){if(h){const t=h.fromDosageToText(n);u(t)}}()}),[n,h]);return(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{style:{display:"flex"},children:[(0,a.jsxs)("select",{value:c,onChange:t=>d(t.target.value),style:{marginRight:"10px"},children:[(0,a.jsx)("option",{value:"en",children:"English"}),(0,a.jsx)("option",{value:"fr",children:"French"}),(0,a.jsx)("option",{value:"nl",children:"Dutch"}),(0,a.jsx)("option",{value:"de",children:"German"})]}),(0,a.jsx)("button",{onClick:async()=>{if(h){await h.changeLanguage(c);const t=h.fromDosageToText(n);u(t)}},children:"Confirm"})]}),(0,a.jsx)("div",{style:{marginTop:"10px"},children:(0,a.jsx)(r.default,{language:"markup",children:(g=l,(0,o.D4)(g))})})]});var g}}}]);